{"version":3,"file":"static/webpack/static/development/pages/alerts.js.0a90f27be9f9aaf01107.hot-update.js","sources":["webpack:///./pages/alerts.js"],"sourcesContent":["import Example from \"../components/Example\";\nimport { useState, Fragment } from \"react\";\n\nconst Alert = ({ color = \"blue\", children }) => {\n  const [show, setShow] = useState(true);\n\n  return show ? (\n    <div\n      className={`rounded border border-${color}-400 text-${color}-800 bg-${color}-200 p-4 mb-4 relative`}\n      role=\"alert\"\n    >\n      <button\n        type=\"button\"\n        className=\"absolute top-0 right-0 px-4 py-3 text-xl font-bold\"\n        datadismiss=\"alert\"\n        aria-label=\"Close\"\n        onClick={() => setShow(false)}\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n      {children}\n    </div>\n  ) : null;\n};\n\nexport default () => (\n  <div>\n    <h1 className=\"font-400 text-5xl\">Alerts</h1>\n    <p className=\"text-2xl font-400 leading-normal w-4/5\">\n      Provide contextual feedback messages for typical user actions with the\n      handful of available and flexible alert messages.\n    </p>\n\n    <h2 className=\"font-medium text-3xl mt-10\">React Component Example</h2>\n\n    <p>\n      Tailstrap alerts can be used much less verbosely if made into a React\n      component.\n    </p>\n    <Example\n      code={`const Alert = ({ color = \"blue\", children }) => (\n  <div\n    className={\\`rounded border border-\\${color}-400 text-\\${color}-800 bg-\\${color}-200 p-4 mb-4\\`}\n    role=\"alert\"\n  >\n    {children}\n  </div>\n);\n\n<Alert color=\"green\">A simple success alert—check it out!</Alert>\n`}\n    >\n      <Alert color=\"green\">A simple success alert—check it out!</Alert>\n    </Example>\n\n    <h2 className=\"font-medium text-3xl mt-10\">Examples</h2>\n    <p>\n      Alerts are available for any length of text, as well as an optional\n      dismiss button. For inline dismissal, use a javascript framework that can\n      listen for click events on the close button.\n    </p>\n\n    <Example\n      code={`<div class=\"rounded border border-blue-400 text-blue-800 bg-blue-200 p-4 mb-4 font-mono\" role=\"alert\">\nA simple primary alert—check it out!\n</div>\n\n<div class=\"rounded border border-gray-400 text-gray-800 bg-gray-200 p-4 mb-4\" role=\"alert\">\nA simple secondary alert—check it out!\n</div>\n\n<div class=\"rounded border border-green-400 text-green-800 bg-green-200 p-4 mb-4\" role=\"alert\">\nA simple success alert—check it out!\n</div>\n\n<div class=\"rounded border border-red-400 text-red-800 bg-red-200 p-4 mb-4\" role=\"alert\">\nA simple danger alert—check it out!\n</div>\n\n<div class=\"rounded border border-yellow-400 text-yellow-800 bg-yellow-200 p-4 mb-4\" role=\"alert\">\nA simple warning alert—check it out!\n</div>\n\n<div class=\"rounded border border-teal-400 text-teal-800 bg-teal-200 p-4 mb-4\" role=\"alert\">\nA simple info alert—check it out!\n</div>\n`}\n    />\n  </div>\n);\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AArCA;;;;A","sourceRoot":""}